{"version":3,"sources":["thumbs_up.png","thumbs_down.png","victory.png","utilities.js","App.js","reportWebVitals.js","index.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","color","size","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","imgStyle","position","marginLeft","marginRight","left","bottom","right","textAlign","height","signs","thumbs_up","victory","thumbs_down","App","webcamRef","useRef","canvasRef","useState","emoji","setEmoji","runHandpose","a","handpose","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","estimateHands","hand","thumbsDownGesture","fp","addCurl","Thumb","NoCurl","addDirection","VerticalDown","DiagonalDownLeft","DiagonalDownRight","GE","VictoryGesture","ThumbsUpGesture","estimate","gesture","console","log","undefined","gestures","name","getContext","className","ref","margin","zindex","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef607f6e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/thumbs_up.e3bf974d.png\";","export default __webpack_public_path__ + \"static/media/thumbs_down.163dd8b8.png\";","export default __webpack_public_path__ + \"static/media/victory.8710fbb2.png\";","//Drawing function\r\n\r\n//points for fingers\r\n\r\nconst fingerJoints = {\r\n    thumb : [0,1,2,3,4],\r\n    indexFinger :  [0,5,6,7,8],\r\n    middleFinger  : [0,9,10,11,12],\r\n    ringFinger : [0,13,14,15,16],\r\n    pinky : [0,17,18,19,20] \r\n}\r\n//Infinity Gauntlet\r\nconst style = {\r\n    0: { color: \"yellow\", size: 15 },\r\n    1: { color: \"gold\", size: 6 },\r\n    2: { color: \"green\", size: 10 },\r\n    3: { color: \"gold\", size: 6 },\r\n    4: { color: \"gold\", size: 6 },\r\n    5: { color: \"purple\", size: 10 },\r\n    6: { color: \"gold\", size: 6 },\r\n    7: { color: \"gold\", size: 6 },\r\n    8: { color: \"gold\", size: 6 },\r\n    9: { color: \"blue\", size: 10 },\r\n    10: { color: \"gold\", size: 6 },\r\n    11: { color: \"gold\", size: 6 },\r\n    12: { color: \"gold\", size: 6 },\r\n    13: { color: \"red\", size: 10 },\r\n    14: { color: \"gold\", size: 6 },\r\n    15: { color: \"gold\", size: 6 },\r\n    16: { color: \"gold\", size: 6 },\r\n    17: { color: \"orange\", size: 10 },\r\n    18: { color: \"gold\", size: 6 },\r\n    19: { color: \"gold\", size: 6 },\r\n    20: { color: \"gold\", size: 6 },\r\n  };\r\n\r\n\r\n\r\n\r\nexport const drawHand = (predictions,ctx) =>{\r\n    //Checking if we have some prediction\r\n    if (predictions.length>0) {\r\n        //Loop through each prediction\r\n        predictions.forEach(prediction=>{\r\n             //Grab landmarks\r\n             const landmarks = prediction.landmarks;\r\n\r\n             //loop through fingers\r\n             for(let j = 0; j<Object.keys(fingerJoints).length; ++j) {\r\n                 let finger = Object.keys(fingerJoints)[j];\r\n                 //loop through pair of joints\r\n                 for(let k = 0; k<fingerJoints[finger].length-1; ++k) {\r\n                        //Get pairs of joints\r\n                        const firstJointIndex = fingerJoints[finger][k];\r\n                        const secondJointIndex = fingerJoints[finger][k+1];\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(\r\n                            landmarks[firstJointIndex][0],\r\n                            landmarks[firstJointIndex][1],\r\n                        );\r\n                        ctx.lineTo(\r\n                            landmarks[secondJointIndex][0],\r\n                            landmarks[secondJointIndex][1],\r\n                        );\r\n                        ctx.strokeStyle = \"gold\";\r\n                        ctx.lineWidth = 4;\r\n                        ctx.stroke();\r\n                 }\r\n             }\r\n\r\n             for(let i= 0; i<landmarks.length; ++i) {\r\n                 //Get x point\r\n                 const x = landmarks[i][0];\r\n                 //get y point\r\n                 const y = landmarks[i][1];\r\n                 //start drawing\r\n                 ctx.beginPath();\r\n                 ctx.arc(x,y,style[i][\"size\"],0,3*Math.PI);\r\n\r\n                 ctx.fillStyle = style[i]['color'];\r\n                 ctx.fill();\r\n\r\n             }\r\n        })\r\n    }\r\n}","import React, { useRef, useState } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport * as fp from 'fingerpose'\nimport \"./App.css\";\nimport thumbs_up from './thumbs_up.png'\nimport thumbs_down from './thumbs_down.png'\nimport victory from './victory.png'\nimport { drawHand } from \"./utilities\";\n\n\nconst imgStyle = {\n  position: \"absolute\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  left: 400,\n  bottom: 500,\n  right: 0,\n  textAlign: \"center\",\n  height: 100,\n}\n\nconst signs = { thumbs_up: thumbs_up, victory: victory, thumbs_down : thumbs_down };\n\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null)\n  \n  const [emoji, setEmoji] = useState(null);\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    // console.log(\"handpose model loaded!\");\n    //Loop and detect Hands\n    setInterval(()=>{\n      detect(net);\n    }, 100)\n  };\n\n  //finger \n\n  const detect = async (net) => {\n    //check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      //get video porperties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      //set video height and width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      //set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      //make detection\n      const hand = await net.estimateHands(video);\n      // console.log(hand);\n\n      //New gesture :\n      const thumbsDownGesture = new fp.GestureDescription('thumbs_down');\n      thumbsDownGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.NoCurl);\n      thumbsDownGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.VerticalDown, 1.0);\n\n      thumbsDownGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.DiagonalDownLeft, 0.9);\n      thumbsDownGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.DiagonalDownRight, 0.9);\n\n      if (hand.length>0) {\n        const GE = new fp.GestureEstimator([\n          fp.Gestures.VictoryGesture,\n          fp.Gestures.ThumbsUpGesture,\n          thumbsDownGesture\n         \n\n\n        ])\n        const gesture = await GE.estimate(hand[0].landmarks,8);\n        console.log(gesture);\n        if (gesture.gestures!==undefined && gesture.gestures.length>0) {\n          // alert(signs[gesture.gestures[0].name])\n          setEmoji(signs[gesture.gestures[0].name]);\n\n        }\n      }\n\n      //draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  runHandpose();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            margin: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            margin: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        {\n          emoji!==null ? <img src={emoji} style={{imgStyle}}/> : \"\" \n        }\n\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}